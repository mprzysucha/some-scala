package projecteuler.problem2

/**
  * The solution to Project Euler Problem 2 - Even Fibonacci numbers
  *
  * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  *
  * https://projecteuler.net/problem=2
  *
  * @author Michal Przysucha
  */
object Problem2 extends App {

  println(fibonacci.takeWhile(_ < 4000000).filter(_ % 2 == 0).sum)

  type Num = Long

  def fibonacci: Stream[Num] = fibonacci(1, 2)
  def fibonacci(f: Num, s: Num): Stream[Num] = Stream.cons(f, Stream.cons(s, fibonacci(f + s, f + s + s)))

}
